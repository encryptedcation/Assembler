var crr
var op
var ct
var x
var y
mov R0 $0
mov R1 $0
mov R2 $30
mov R3 $1
mov R4 $2
st R3 x
st R3 y
st R3 op
st R3 crr
sub R2 R3 R2
cmp R2 R0
je end
loop: ld R6 ct
div R6 R4
add R6 R3 R6
st R6 ct
cmp R1 R3
je if
jmp else
if: ld R0 x
ld R1 y 
add R1 R0 R0
mov FLAGS R6
st R0 x
st R0 op
rs R6 $3
cmp R6 R3
je overflow
jmp cond
else: ld R0 x
ld R1 y
add R0 R1 R1
mov FLAGS R6
st R1 y
st R1 op
cmp R6 R3
je overflow
cond: ld R0 ct 
cmp R0 R2
je end
jmp loop
overflow: st R5 crr
end: hlt